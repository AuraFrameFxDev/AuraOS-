# Genesis-OS Version Catalog - Auto-Provisioned (Network-Compatible)
# Sacred Rule: "If it can be automated, it MUST be automated"

[versions]
# Core Versions (K2 Kotlin + Modern AGP)
kotlin = "2.0.21"
agp = "8.5.2"
buildTools = "34.0.0"
compileSdk = "34"
minSdk = "24"
jvmToolchain = "17"
javaTarget = "17"

# Compose BOM & Compiler (K2 auto-provisioned)
composeBom = "2024.09.03"
composeActivity = "1.9.2"

# AndroidX Core
androidxCore = "1.13.1"
androidxLifecycle = "2.8.6"

# Testing (JUnit 5 Complete Bundle)
junit5 = "5.10.3"
androidxTestExt = "1.2.1"
espresso = "3.6.1"
androidxTestCore = "1.6.1"

# Debug Tools
leakcanary = "2.14"
flipper = "0.264.0"
chucker = "4.0.0"

# OpenAPI Generation
openapi = "7.8.0"

# Networking
retrofit = "2.11.0"
okhttp = "4.12.0"
moshi = "1.15.1"

# Dependency Injection
dagger = "2.51.1"
hilt = "2.51.1"

# Coroutines
coroutines = "1.8.1"

[libraries]
# Compose Bundle
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
compose-material3 = { group = "androidx.compose.material3", name = "material3" }
compose-activity = { group = "androidx.activity", name = "activity-compose", version.ref = "composeActivity" }

# AndroidX Core
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidxCore" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }

# Testing Bundle (JUnit 5 Complete)
junit5-jupiter = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junit5" }
junit5-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit5" }
junit5-params = { group = "org.junit.jupiter", name = "junit-jupiter-params", version.ref = "junit5" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidxTestExt" }
androidx-test-core = { group = "androidx.test", name = "core", version.ref = "androidxTestCore" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso" }

# Debug Tools (Canary)
leakcanary-android = { group = "com.squareup.leakcanary", name = "leakcanary-android", version.ref = "leakcanary" }
flipper = { group = "com.facebook.flipper", name = "flipper", version.ref = "flipper" }
flipper-network = { group = "com.facebook.flipper", name = "flipper-network-plugin", version.ref = "flipper" }
chucker = { group = "com.github.chuckerteam.chucker", name = "library", version.ref = "chucker" }
chucker-noop = { group = "com.github.chuckerteam.chucker", name = "library-no-op", version.ref = "chucker" }

# Networking
retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-moshi = { group = "com.squareup.retrofit2", name = "converter-moshi", version.ref = "retrofit" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }
okhttp-logging = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" }
moshi = { group = "com.squareup.moshi", name = "moshi", version.ref = "moshi" }
moshi-kotlin = { group = "com.squareup.moshi", name = "moshi-kotlin", version.ref = "moshi" }

# Dependency Injection
dagger-hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
dagger-hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }

# Coroutines
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "coroutines" }

[bundles]
# Compose Bundle (K2 Auto-Provisioned)
compose = [
    "compose-ui",
    "compose-ui-graphics", 
    "compose-ui-tooling-preview",
    "compose-material3",
    "compose-activity"
]

# Testing Bundle (JUnit 5 Complete)
testing = [
    "junit5-jupiter",
    "junit5-engine", 
    "junit5-params"
]

# Android Testing Bundle
android-testing = [
    "androidx-test-ext-junit",
    "androidx-test-core",
    "espresso-core",
    "compose-ui-test-junit4"
]

# Debug Bundle (Canary Tools)
debug = [
    "compose-ui-tooling",
    "compose-ui-test-manifest",
    "leakcanary-android",
    "flipper",
    "flipper-network",
    "chucker"
]

# Networking Bundle
networking = [
    "retrofit",
    "retrofit-moshi",
    "okhttp",
    "okhttp-logging",
    "moshi",
    "moshi-kotlin"
]

# Core Bundle
core = [
    "androidx-core-ktx",
    "androidx-lifecycle-runtime-ktx",
    "androidx-lifecycle-viewmodel-compose",
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-android"
]

[plugins]
# Auto-Provisioned Plugins (Bleeding-Edge)
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
openapi-generator = { id = "org.openapi.generator", version.ref = "openapi" }